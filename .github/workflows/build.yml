name: Build

on: [push, pull_request]

env:
  BUILD_TYPE: MinSizeRel

jobs:
  # === Windows PRO ===
  windows-pro:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Build
        shell: cmd
        run: |
          cd build
          cmake -G "Visual Studio 16 2019" -DBUILD_SDLGPU=On -DCMAKE_BUILD_TYPE=%BUILD_TYPE% -DBUILD_PRO=On ..
          cmake --build . --config %BUILD_TYPE% --parallel

      - name: Deploy
        uses: actions/upload-artifact@v2
        with:
          name: "tic80-windows-pro"
          path: build/bin/tic80.exe
  # === Ubuntu PRO ===
  linux-pro:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6

      - name: Install
        run: |
          sudo apt-get update
          sudo apt-get install libglu1-mesa-dev libasound2-dev libpulse-dev libaudio-dev libsamplerate0-dev -y

      - name: Build
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_SDLGPU=On -DBUILD_PRO=On ..
          cmake --build . --config $BUILD_TYPE --parallel
          cpack

      - name: Deploy DEB
        uses: actions/upload-artifact@v2
        with:
          name: "tic80-linux-deb-pro"
          path: build/tic80.deb

      - name: Deploy ZIP
        uses: actions/upload-artifact@v2
        with:
          name: "tic80-linux-pro"
          path: build/bin/tic80
  # === Raspberry PI PRO ===
  rpi-pro:
    runs-on: ubuntu-latest
    container: nesbox/rpi-tic80:latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install Host toolchain
        run: |
          apt-get update
          apt-get install --assume-yes build-essential ruby-full

      - name: Build
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_PRO=On -DCMAKE_TOOLCHAIN_FILE=rpi/toolchain.cmake ..
          cmake --build . --config $BUILD_TYPE --parallel
          cpack

      - name: Deploy DEB
        uses: actions/upload-artifact@v2
        with:
          name: "tic80-rpi-deb-pro"
          path: build/tic80.deb

      - name: Deploy
        uses: actions/upload-artifact@v2
        with:
          name: "tic80-rpi-pro"
          path: build/bin/tic80

  # === MacOS 10.15 PRO ===
  macos-pro:
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install
        run: brew uninstall --ignore-dependencies libidn2

      - name: Build
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_SDLGPU=On -DBUILD_PRO=On ..
          cmake --build . --config $BUILD_TYPE --parallel
          cpack
          cp *.dmg tic80.dmg

      - name: Deploy DMG
        uses: actions/upload-artifact@v2
        with:
          name: "tic80-macos-dmg-pro"
          path: build/tic80.dmg

      - name: Deploy
        uses: actions/upload-artifact@v2
        with:
          name: "tic80-macos-pro"
          path: build/bin/tic80
